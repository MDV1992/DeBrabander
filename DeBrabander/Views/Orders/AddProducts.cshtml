@model DeBrabander.ViewModels.Orders.OrderAddProductsViewModel
@using PagedList.Mvc;

@{
    ViewBag.Title = "De Brabander";
}
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
<link href="~/Content/Site.css" rel="stylesheet" />
<h2>Artikelen toevoegen op order van @Model.order.FullName</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div>
        @using (Html.BeginForm("AddProducts", "Orders", FormMethod.Get, new { id = Model.order.OrderId }))
        {
            <p>
                @Html.TextBox("searchString", ViewBag.CurrentFilterSearchString as string, new { @class = "form-control", placeholder = "Zoeken op productnaam/code", @style = "margin: 3px;" })
                @Html.DropDownList("CategoryID", (SelectList)ViewBag.CategoryID, "Categorie", new { @class = "btn btn-default dropdown-toggle" })
                @Html.TextBox("id", Model.order.OrderId, new { @class = "hidden" })
                <input type="submit" value="Zoek" class="btn btn-default" style="margin: 3px" />
            </p>
        }
    </div>

    <table class="table">
        <tr>
            <th>
                @Html.ActionLink(Html.DisplayNameFor(Model => Model.product.ProductName).ToHtmlString(), "addProduct", new { sortOrder = ViewBag.ProductSortParm })
            </th>
            <th>
                @Html.DisplayNameFor(model => model.product.ProductCode)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.product.Brand)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.product.PriceExVAT)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.product.Category.CategoryName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.product.Description)
            </th>
            <th>

            </th>
        </tr>

        @if (Model.products.Count() == 0)
        {
            <tr>
                <td colspan="3">Er voldoen geen artikelen aan je zoekopdracht</td>
            </tr>
        }
        else
        {
            foreach (var item in Model.products)
            {
                <tr>
                    <td>

                        @item.ProductName
                    </td>
                    <td>
                        @item.ProductCode
                    </td>
                    <td>
                        @item.Brand
                    </td>
                    <td>
                        @item.PriceExVAT
                    </td>
                    <td>
                        @item.Category.CategoryName
                    </td>
                    <td>
                        @item.Description
                    </td>
                    <td>
                        <abbr title="Artikel toevoegen">
                            <a href="@Url.Action("AddProductToOrder", "Orders", new { productId = item.ProductId, orderId = Model.order.OrderId })" class="btn btn-success">
                                <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>
                            </a>
                        </abbr>

                    </td>

                </tr>
            }
        }
    </table>
}
<div class="row">
    <div class="col-md-2 col-md-offset-10">
        Pagina @(Model.products.PageCount < Model.products.PageNumber ? 0 : Model.products.PageNumber) van de @Model.products.PageCount
    </div>
    <div class="col-md-2 col-md-offset-10">
        @Html.PagedListPager(Model.products, page => Url.Action("AddProducts", new { @class = "pagination pagination-sm", page, currentFilterSearchString = ViewBag.CurrentFilterSearchString, currentFilterCategoryId = ViewBag.CurrentFilterCategoryId }), PagedList.PagedListRenderOptions.tomsLayout)
    </div>
</div>
<div>
    <table align="center"></table>
</div>

<br />
<br />

@if (Model != null)
{
    if (Model.order.OrderDetail != null && Model.order.OrderDetail.Count != 0)
    {
        <table class="table">
            <tr>
                <th>
                    @*@Html.DisplayNameFor(model => model.orderDetail.ProductName)*@
                    Artikel
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.orderDetail.Quantity)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.orderDetail.Description)
                </th>
                <th>
                    @*@Html.DisplayNameFor(model => model.orderDetail.PriceExVAT)*@
                    Prijs ex BTW
                </th>
                <th>
                    @*@Html.DisplayNameFor(model => model.orderDetail.VAT.VATValue)*@
                    BTW
                </th>
                <th>
                    @*@Html.DisplayNameFor(model => model.orderDetail.TotalExVat)*@
                    Tot. ex BTW
                </th>
                <th>
                    @*@Html.DisplayNameFor(model => model.orderDetail.TotalIncVat)*@
                    Tot. inc BTW
                </th>
                <th>

                </th>
            </tr>

            @foreach (var item in Model.order.OrderDetail)
            {
                <tr>
                    <td class="col-md-1">
                        @item.ProductName
                    </td>
                    <td class="col-md-1">
                        @item.Quantity
                    </td>
                    <td class="col-md-4">
                        @item.Description
                    </td>
                    <td class="col-md-1">
                        @item.PriceExVAT
                    </td>
                    <td class="col-md-1">
                        @item.VAT.VATValue%
                    </td>
                    <td class="col-md-1">
                        @item.TotalExVat
                    </td>
                    <td class="col-md-1">
                        @item.TotalIncVat
                    </td>
                    <td class="col-md-2">
                        <abbr title="Aantal aanpassen">
                            <a href="@Url.Action("Edit", "OrderDetails", new { id = item.OrderDetailId })" class="btn btn-primary">
                                <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span>
                            </a>
                        </abbr>
                        <abbr title="Artikel verwijderen">
                            <a href="@Url.Action("Delete", "OrderDetails", new { id = item.OrderDetailId })" class="btn btn-danger">
                                <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>
                            </a>
                        </abbr>
                    </td>
                </tr>
            }
            <tr>
                <th>
                </th>
                <th>
                </th>
                <th>
                </th>
                <th>
                </th>
                <th>
                </th>
                <th>
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.order.TotalPrice)
                </th>
                <th>
                </th>
            </tr>
            <tr style="border: hidden">
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td>
                    @Html.DisplayFor(model => model.order.TotalPrice)
                </td>
            </tr>
        </table>
    }
}


<div style="margin-bottom: 5px;">
    <a href="@Url.Action("Edit", "Orders", new { id = Model.order.OrderId })" class="btn btn-info">
        Ga naar order
    </a>
</div>
@using (Html.BeginForm("Index", "Orders"))
{
    <button type="submit" class="btn btn-info">Ga naar overzicht</button>
}


