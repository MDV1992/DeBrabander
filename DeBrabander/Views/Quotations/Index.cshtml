@model DeBrabander.ViewModels.Quotations.QuotationIndexViewModel
@using PagedList.Mvc;

<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Index";
}
<h2>Index</h2>
<link href="~/Content/Site.css" rel="stylesheet" />
<p>
    @Html.ActionLink("Maak Een Nieuwe Offerte Aan", "Create")
</p>

@using (Html.BeginForm())
{
    <p>
        Zoek op offertenummer: &nbsp;@Html.TextBox("searchQuotationNumber", ViewBag.CurrentFilterQuotation as string)
        Zoek op klant: &nbsp;@Html.TextBox("searchCustomer", ViewBag.CurrentFilterCustomer as string)
        Zoek op Werf: &nbsp;@Html.TextBox("searchDelivery", ViewBag.CurrentFilterDelivery as string)
        <input type="submit" value="Zoek" />
    </p>
}
<table class="table">
    <tr>
        <th>
            @Html.ActionLink(Html.DisplayNameFor(model => model.quotation.QuotationNumber).ToHtmlString(), "Index", new { sortOrder = ViewBag.QuotationSortParm })
        </th>
        <th>
            @Html.DisplayNameFor(model => model.quotation.Date)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.quotation.ExpirationDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.quotation.Active)
        </th>
        <th>
            @Html.ActionLink(Html.DisplayNameFor(model => model.quotation.FullName).ToHtmlString(), "Index", new { sortOrder = ViewBag.CustomerSortParm })
        </th>
        <th>
            @Html.DisplayNameFor(model => model.quotation.Annotation)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.quotation.customerDeliveryAddress.DeliveryAddressInfo)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.quotation.TotalPrice)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model.quotations) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.QuotationNumber)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Date)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ExpirationDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Active)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.FullName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Annotation)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.customerDeliveryAddress.DeliveryAddressInfo)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.TotalPrice)
        </td>
        <td>
            <a href="@Url.Action("Edit", "Quotations", new { id = item.QuotationId })" class="btn btn-info toggle-more-detail">
                <span class="glyphicon glyphicon-list-alt" aria-hidden="true"></span>
            </a>
            <a href="@Url.Action("Delete", "Quotations", new { id = item.QuotationId })" class="btn btn-danger">
                <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>
            </a>
            <a href="@Url.Action("AddProducts", "Quotations", new { id = item.QuotationId })" class="btn btn-success">
                <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>
            </a>    
            <a href="@Url.Action("CopyQuotation", "Quotations", new { id = item.QuotationId })" class="btn btn-warning">
                <span class="glyphicon glyphicon-repeat" aria-hidden="true"></span>
            </a>  
        </td>
    </tr>
}

</table>
<br />
Page @(Model.quotations.PageCount < Model.quotations.PageNumber ? 0 : Model.quotations.PageNumber) of @Model.quotations.PageCount
@Html.PagedListPager(Model.quotations, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilterQuotationNumber = ViewBag.CurrentFilterQuotation, currentFilterCustomer = ViewBag.CurrentFilterCustomer, currentFilterDelivery = ViewBag.CurrentFilterDelivery }))
