
@model DeBrabander.ViewModels.Quotations.QuotationCreateViewModel
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Create";
}

<h2>Nieuwe offerte</h2>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script>
    $(document).ready(function () {
        $(".select").change(function () {
            var id = $(this).attr('data-customer');
            if (this.checked) {
                $(".rowToExpand." + id).show();
            } else {
                $(".rowToExpand." + id).hide();
            }

        });
    });
</script>


@using (Html.BeginForm("Create", "Quotations", FormMethod.Get))
{
    @Html.AntiForgeryToken()

    <div class="hidden">
        @Html.EditorFor(model => model.quotation.QuotationId, new { htmlAttributes = new { @class = "form-control" } })
    </div>

    <h3>offerte nummer : @Model.quotation.QuotationNumber   --   Vervaldatum  @Model.quotation.ExpirationDate.ToShortDateString()</h3>
    <p>
        <b>Zoeken op:</b> <br />
        Naam: @Html.TextBox("searchStringName", ViewBag.CurrentFilterName as string)
        Gemeente: @Html.TextBox("searchStringTown", ViewBag.CurrentFilterTown as string)
        <input type="submit" value="Zoek" />
    </p>
    <table class="table">
        <tr>
            <th style="display: none">
                @Html.DisplayNameFor(model => model.customer.CustomerId)
            </th>
            <th>
                @Html.ActionLink(Html.DisplayNameFor(model => model.customer.LastName).ToHtmlString(), "Create", new { sortOrder = ViewBag.NameSortParm })
            </th>
            <th>
                @Html.DisplayNameFor(model => model.customer.FirstName)
            </th>
            <th>
                @Html.ActionLink(Html.DisplayNameFor(model => model.customer.Address.Town).ToHtmlString(), "Create", new { sortOrder = ViewBag.TownSortParm })
            </th>
            <th>
                @Html.DisplayNameFor(model => model.customer.Address.StreetName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.customer.Address.StreetNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.customer.CompanyName)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model.customers)
        {
            <tr class="customer">
                <td>
                    <input type="checkbox" class="select" data-customer="@Html.DisplayFor(modelItem => item.CustomerId)"> @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelitem => item.Address.Town)
                </td>
                <td>
                    @Html.DisplayFor(modelitem => item.Address.StreetName)
                </td>
                <td>
                    @Html.DisplayFor(modelitem => item.Address.StreetNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CompanyName)
                </td>
                <td>
                    <abbr title="Weradres toevoegen">
                        <a href="@Url.Action("AddDeliveryAddress", "AddDeliveryAddress", new { id = item.CustomerId })" class="btn btn-success">
                            <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>
                        </a>
                    </abbr>
                </td>
            </tr>
            if (item.CustomerDeliveryAddress.Count > 1)
            {
                foreach (var item2 in item.CustomerDeliveryAddress)
                {

                    <tr style="display:none" class="rowToExpand @Html.DisplayFor(modelItem => item.CustomerId)">
                        <td>
                            
                        </td>
                        <td>
                            <input type="checkbox" name="DeliveryID" value="@item2.CustomerDeliveryAddressId"> Selecteer deze klant <br>
                        </td>
                        <td>
                            @Html.DisplayFor(ModelItem => item2.DeliveryAddressInfo)
                        </td>
                        <td>
                            @Html.DisplayFor(ModelItem => item2.StreetName)
                        </td>
                        <td>
                            @Html.DisplayFor(ModelItem => item2.StreetNumber)
                        </td>
                    </tr>
                }
            }
            else
            {
                foreach (var item2 in item.CustomerDeliveryAddress)
                {
                    <tr style="display:none" class="rowToExpand @Html.DisplayFor(modelItem => item.CustomerId)">
                        <td></td>
                        <td>
                            <input type="checkbox" name="DeliveryID" value="@item2.CustomerDeliveryAddressId"> Selecteer deze klant <br>
                        </td>
                    </tr>
                }
            }
        }

    </table>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <h3>Offerte info : @Html.TextBox("QuotationInfo")</h3>
            <input type="submit" value="Opslaan" name="Create" class="btn btn-default" formmethod="post" />
            <input type="submit" value="Artikel toevoegen" name="AddProducts" class="btn btn-default" formmethod="post" />
        </div>
    </div>


}
Pagina @(Model.customers.PageCount < Model.customers.PageNumber ? 0 : Model.customers.PageNumber) van de @Model.customers.PageCount

@Html.PagedListPager(Model.customers, page => Url.Action("Create", new { page, sortOrder = ViewBag.CurrentSort, currentFilterName = ViewBag.CurrentFilterName, currentFilterTown = ViewBag.CurrentFilterTown }))


<div>
    @Html.ActionLink("Back to List", "Index")
</div>
