
@model DeBrabander.ViewModels.Quotations.QuotationCreateViewModel
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm("Create", "Quotations", FormMethod.Get))
{
    @Html.AntiForgeryToken()

    <div class="hidden">
        @Html.EditorFor(model => model.quotation.QuotationId, new { htmlAttributes = new { @class = "form-control" } })
    </div>
    <p>
        <b>Zoeken op:</b> <br />
        Naam: @Html.TextBox("searchStringName", ViewBag.CurrentFilterName as string)
        Gemeente: @Html.TextBox("searchStringTown", ViewBag.CurrentFilterTown as string)
        <input type="submit" value="Zoek" />
    </p>
    <table class="table">
            <tr>
                <th>
                    @Html.ActionLink(Html.DisplayNameFor(model => model.customer.LastName).ToHtmlString(), "Create", new { sortOrder = ViewBag.NameSortParm })
                    
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.customer.FirstName)
                  
                </th>
                <th>
                    @Html.ActionLink(Html.DisplayNameFor(model => model.customer.Address.Town).ToHtmlString(), "Create", new { sortOrder = ViewBag.TownSortParm }) 
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.customer.Address.StreetName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.customer.Address.StreetNumber)
                </th>
                <th>                    
                    @Html.DisplayNameFor(model => model.customer.CompanyName)
                </th>
                <th>                  
                    @Html.DisplayNameFor(model => model.customer.CustomerId)
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model.customers)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.LastName)
                        <br >
                        <table>
                           @if (item.CustomerDeliveryAddress.Count > 1)
                           {
                           foreach (var item2 in item.CustomerDeliveryAddress)
                           {

                            <tr>
                                <td>
                                   @Html.DisplayFor(ModelItem => item2.DeliveryAddressInfo)
                                </td>
                                <td>
                                   @Html.DisplayFor(ModelItem => item2.StreetName)
                                </td>
                                <td>
                                   @Html.DisplayFor(ModelItem => item2.StreetNumber)
                                </td>
                            </tr>
                           }
                           }
                        </table>
                    </td>
                    <td>
                       @Html.DisplayFor(modelItem => item.FirstName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelitem => item.Address.Town)                       
                    </td>
                    <td>
                        @Html.DisplayFor(modelitem => item.Address.StreetName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelitem => item.Address.StreetNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CompanyName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CustomerId)
                       
                    </td>
                    <td>
                        @Html.ActionLink("AddDeliveryAddress", "AddDeliveryAddress", new { id = item.CustomerId })
                    </td>
                </tr>
            }

        </table>        
    

}
Page @(Model.customers.PageCount < Model.customers.PageNumber ? 0 : Model.customers.PageNumber) of @Model.customers.PageCount
    
    @Html.PagedListPager(Model.customers, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilterName = ViewBag.CurrentFilterName, currentFilterTown = ViewBag.CurrentFilterTown }))


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Quotation</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.quotation.QuotationNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.quotation.QuotationNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.quotation.QuotationNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.quotation.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.quotation.Date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.quotation.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.quotation.ExpirationDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.quotation.ExpirationDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.quotation.ExpirationDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.quotation.Annotation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.quotation.Annotation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.quotation.Annotation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.quotation.Active, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.quotation.Active)
                    @Html.ValidationMessageFor(model => model.quotation.Active, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.quotation.CustomerId, "Klant", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(x => x.customers, new SelectList(Model.customers, "CustomerId", "FullName"))
                @Html.ValidationMessageFor(model => model.quotation.CustomerId, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" name="Create" class="btn btn-default" />
                <input type="submit" value="AddProducts" name="AddProducts" class="btn btn-default" />
            </div>
        </div>

    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
