
@model DeBrabander.ViewModels.Quotations.QuotationCreateViewModel
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Create";
}

<h2>Aanmaak nieuwe Offerte</h2>

@using (Html.BeginForm("Create", "Quotations", FormMethod.Get))
{
    @Html.AntiForgeryToken()

    <div class="hidden">
        @Html.EditorFor(model => model.quotation.QuotationId, new { htmlAttributes = new { @class = "form-control" } })
    </div>

    <h3>offerte nummer : @Model.quotation.QuotationNumber   --   Vervaldatum  @Model.quotation.ExpirationDate.ToShortDateString()</h3>
    <p>
        <b>Zoeken op:</b> <br />
        Naam: @Html.TextBox("searchStringName", ViewBag.CurrentFilterName as string)
        Gemeente: @Html.TextBox("searchStringTown", ViewBag.CurrentFilterTown as string)
        <input type="submit" value="Zoek" />
    </p>
    <table class="table">
            <tr>
                <th>
                    @Html.ActionLink(Html.DisplayNameFor(model => model.customer.LastName).ToHtmlString(), "Create", new { sortOrder = ViewBag.NameSortParm })
                    
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.customer.FirstName)
                  
                </th>
                <th>
                    @Html.ActionLink(Html.DisplayNameFor(model => model.customer.Address.Town).ToHtmlString(), "Create", new { sortOrder = ViewBag.TownSortParm }) 
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.customer.Address.StreetName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.customer.Address.StreetNumber)
                </th>
                <th>                    
                    @Html.DisplayNameFor(model => model.customer.CompanyName)
                </th>
                <th>                  
                    @Html.DisplayNameFor(model => model.customer.CustomerId)
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model.customers)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.LastName)
                        <br >
                        
                        <table>
                          @if (item.CustomerDeliveryAddress.Count > 1)
                          {
                              foreach (var item2 in item.CustomerDeliveryAddress)
                              {
                            <tr>
                                <td>
                                   @Html.DisplayFor(ModelItem => item2.DeliveryAddressInfo)
                                </td>
                                <td>
                                   @Html.DisplayFor(ModelItem => item2.StreetName)
                                </td>
                                <td>
                                   @Html.DisplayFor(ModelItem => item2.StreetNumber)
                                </td>
                                <td>
                                    <input type="checkbox" name="vehicle" value="@item2.CustomerDeliveryAddressId"> Selecteer deze klant <br>
                                </td>
                            </tr>
                              }
                          }
                          else
                          {
                              foreach (var item2 in item.CustomerDeliveryAddress)
                              {
                                  <tr>
                              <td>
                               <input type="checkbox" name="vehicle" value="@item2.CustomerDeliveryAddressId"> Selecteer deze klant<br>
                                  </td>
                                  </tr>
                                      }
                          }
                        </table>
                        
                    </td>
                    <td>
                       @Html.DisplayFor(modelItem => item.FirstName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelitem => item.Address.Town)                       
                    </td>
                    <td>
                        @Html.DisplayFor(modelitem => item.Address.StreetName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelitem => item.Address.StreetNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CompanyName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CustomerId)
                       
                    </td>
                    <td>
                        @Html.ActionLink("AddDeliveryAddress", "AddDeliveryAddress", new { id = item.CustomerId })
                    </td>
                </tr>
            }

        </table>
        <div class="form-group" >
            <div class="col-md-offset-2 col-md-10" >
                <h3>Offerte info : @Html.TextBox("QuotationInfo")</h3>
                <input type="submit" value="Create" name="Create" class="btn btn-default" formmethod="post" />
                <input type="submit" value="AddProducts" name="AddProducts" class="btn btn-default" formmethod="post"/>
            </div>
        </div>


}
Page @(Model.customers.PageCount < Model.customers.PageNumber ? 0 : Model.customers.PageNumber) of @Model.customers.PageCount
    
    @Html.PagedListPager(Model.customers, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilterName = ViewBag.CurrentFilterName, currentFilterTown = ViewBag.CurrentFilterTown }))


<div>
    @Html.ActionLink("Back to List", "Index")
</div>
