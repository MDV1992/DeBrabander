@model DeBrabander.ViewModels.Quotations.QuotationAddProductsViewModel
@using PagedList.Mvc;

@{
    ViewBag.Title = "AddProducts";
}

<h2>Artikelen toevoegen op offerte van @Model.quotation.FullName</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div>
        @using (Html.BeginForm("AddProducts", "Quotations", FormMethod.Get))
        {
            <b>Zoeken op:</b>
            <p>
                Product Naam / Product Code: @Html.TextBox("searchString", ViewBag.CurrentFilterSearchString as string)
                Categorie: @Html.DropDownList("CategoryID", (SelectList)ViewBag.CategoryID)
                <input type="submit" value="Zoek" />
            </p>
        }
    </div>

    <table class="table">
        <tr>
            <th>
                @Html.ActionLink(Html.DisplayNameFor(Model => Model.product.ProductName).ToHtmlString(), "addProduct", new { sortOrder = ViewBag.ProductSortParm })
            </th>
            <th>
                @Html.DisplayNameFor(model => model.product.ProductCode)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.product.Brand)
            </th>
            <th>

            </th>
        </tr>

        @foreach (var item in Model.products)
        {
            <tr>
                <td>

                    @item.ProductName
                </td>
                <td>
                    @item.ProductCode
                </td>
                <td>
                    @item.Brand
                </td>
                <td>
                    <abbr title="Artikel toevoegen">
                        <a href="@Url.Action("AddProductToQuotation", "Quotations", new { productId = item.ProductId, quotationId = Model.quotation.QuotationId })" class="btn btn-success">
                            <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>
                        </a>
                    </abbr>

                </td>

            </tr>
        }

    </table>
}
Page @(Model.products.PageCount < Model.products.PageNumber ? 0 : Model.products.PageNumber) of @Model.products.PageCount
@Html.PagedListPager(Model.products, page => Url.Action("AddProducts", new { page, currentFilterSearchString = ViewBag.CurrentFilterSearchString, currentFilterCategoryId = ViewBag.CurrentFilterCategoryId }))

<div>
    <table align="center"></table>
</div>

<br />
<br />

@if (Model != null)
{
    if (Model.quotation.QuotationDetail != null && Model.quotation.QuotationDetail.Count != 0)
    {
        <table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.quotationDetail.ProductName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.quotationDetail.Quantity)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.quotationDetail.Description)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.quotationDetail.PriceExVAT)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.quotationDetail.VAT.VATValue)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.quotationDetail.TotalExVat)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.quotationDetail.TotalIncVat)
                </th>
                <th>

                </th>
            </tr>

            @foreach (var item in Model.quotation.QuotationDetail)
            {
                <tr>
                    <td>
                        @item.ProductName
                    </td>
                    <td>
                        @item.Quantity
                    </td>
                    <td>
                        @item.Description
                    </td>
                    <td>
                        @item.PriceExVAT
                    </td>
                    <td>
                        @item.VAT.VATValue%
                    </td>
                    <td>
                        @item.TotalExVat
                    </td>
                    <td>
                        @item.TotalIncVat
                    </td>
                    <td>
                        <abbr title="Aantal aanpassen">
                            <a href="@Url.Action("Edit", "QuotationDetails", new { id = item.QuotationDetailId })" class="btn btn-primary">
                                <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span>
                            </a>
                        </abbr>
                        <abbr title="Artikel verwijderen">
                            <a href="@Url.Action("Delete", "QuotationDetails", new { id = item.QuotationDetailId })" class="btn btn-danger">
                                <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>
                            </a>
                        </abbr>
                    </td>
                </tr>
            }
        </table>
    }
    <table align="right">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.quotation.TotalPrice)
            </th>
        </tr>
        <tr>
            <td>
                @Html.DisplayFor(model => model.quotation.TotalPrice)
            </td>
        </tr>

    </table>
}



<div>
    <a href="@Url.Action("Edit", "Quotations", new { id = Model.quotation.QuotationId })" class="btn btn-info">
        Ga naar offerte
    </a>
</div>
<br />
@using (Html.BeginForm("Index", "Quotations"))
{
    <button type="submit" class="btn btn-info">Ga naar overzicht</button>
}
